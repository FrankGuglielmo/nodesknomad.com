{"ast":null,"code":"var _jsxFileName = \"/Users/frankguglielmo/Code/school/bus370/no-desk-nomad/nodesknomad.com/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport MapComponent from './components/MapComponent';\nimport './css/MapContainer.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [coffeeShops, setCoffeeShops] = useState([]);\n  useEffect(() => {\n    // Fetch coffee shops data here and update state\n    // For now, we'll use mock data\n    const mockData = [{\n      name: 'Coffee Shop 1',\n      latitude: 37.7689,\n      longitude: -122.4220\n    }\n    // Add more shops here\n    ];\n    setCoffeeShops(mockData);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"rounded-map-container\",\n    children: [\" \", /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: defaultPosition,\n      zoom: 13,\n      style: {\n        height: '100vh',\n        width: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n        attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), coffeeShops.map((shop, idx) => /*#__PURE__*/_jsxDEV(Marker, {\n        position: [shop.latitude, shop.longitude],\n        children: /*#__PURE__*/_jsxDEV(Popup, {\n          children: shop.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this)\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"Vo003sWRJJpZ6kplMeuebZuuV5w=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","MapComponent","jsxDEV","_jsxDEV","App","_s","coffeeShops","setCoffeeShops","mockData","name","latitude","longitude","className","children","MapContainer","center","defaultPosition","zoom","style","height","width","TileLayer","url","attribution","fileName","_jsxFileName","lineNumber","columnNumber","map","shop","idx","Marker","position","Popup","_c","$RefreshReg$"],"sources":["/Users/frankguglielmo/Code/school/bus370/no-desk-nomad/nodesknomad.com/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport MapComponent from './components/MapComponent';\nimport './css/MapContainer.css';\n\nconst App = () => {\n  const [coffeeShops, setCoffeeShops] = useState([]);\n\n  useEffect(() => {\n    // Fetch coffee shops data here and update state\n    // For now, we'll use mock data\n    const mockData = [\n      { name: 'Coffee Shop 1', latitude: 37.7689, longitude: -122.4220 },\n      // Add more shops here\n    ];\n    setCoffeeShops(mockData);\n  }, []);\n\n  return (\n    <div className=\"rounded-map-container\"> {/* Apply the class here */}\n      <MapContainer center={defaultPosition} zoom={13} style={{ height: '100vh', width: '100%' }}>\n        <TileLayer\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n        />\n        {coffeeShops.map((shop, idx) => (\n          <Marker key={idx} position={[shop.latitude, shop.longitude]}>\n            <Popup>{shop.name}</Popup>\n          </Marker>\n        ))}\n      </MapContainer>\n    </div>\n  );\n};\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,YAAY,MAAM,2BAA2B;AACpD,OAAO,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAElDC,SAAS,CAAC,MAAM;IACd;IACA;IACA,MAAMQ,QAAQ,GAAG,CACf;MAAEC,IAAI,EAAE,eAAe;MAAEC,QAAQ,EAAE,OAAO;MAAEC,SAAS,EAAE,CAAC;IAAS;IACjE;IAAA,CACD;IACDJ,cAAc,CAACC,QAAQ,CAAC;EAC1B,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAKS,SAAS,EAAC,uBAAuB;IAAAC,QAAA,GAAC,GAAC,eACtCV,OAAA,CAACW,YAAY;MAACC,MAAM,EAAEC,eAAgB;MAACC,IAAI,EAAE,EAAG;MAACC,KAAK,EAAE;QAAEC,MAAM,EAAE,OAAO;QAAEC,KAAK,EAAE;MAAO,CAAE;MAAAP,QAAA,gBACzFV,OAAA,CAACkB,SAAS;QACRC,GAAG,EAAC,oDAAoD;QACxDC,WAAW,EAAC;MAAyF;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtG,CAAC,EACDrB,WAAW,CAACsB,GAAG,CAAC,CAACC,IAAI,EAAEC,GAAG,kBACzB3B,OAAA,CAAC4B,MAAM;QAAWC,QAAQ,EAAE,CAACH,IAAI,CAACnB,QAAQ,EAAEmB,IAAI,CAAClB,SAAS,CAAE;QAAAE,QAAA,eAC1DV,OAAA,CAAC8B,KAAK;UAAApB,QAAA,EAAEgB,IAAI,CAACpB;QAAI;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC,GADfG,GAAG;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAER,CACT,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACU,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACZ,CAAC;AAEV,CAAC;AAACtB,EAAA,CA5BID,GAAG;AAAA8B,EAAA,GAAH9B,GAAG;AA8BT,eAAeA,GAAG;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}